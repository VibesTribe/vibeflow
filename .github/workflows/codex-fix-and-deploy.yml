name: Codex â€“ Fix and Deploy Pages
on:
  workflow_dispatch: {}

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      # Core fix: force relative base so Pages serves assets correctly
      - name: Write vite.config.ts (relative base)
        run: |
          cat > vite.config.ts <<'EOF'
          import { defineConfig } from 'vite';
          import react from '@vitejs/plugin-react';

          const base = process.env.NODE_ENV === 'production' ? './' : '/';

          export default defineConfig({
            base,
            plugins: [react()],
            server: {
              port: 5173,
              host: true
            }
          });
          EOF

      # Optional: make /<repo>/visual-canvas resolve to the canvas view
      - name: Patch src/main.tsx (optional)
        shell: bash
        run: |
          if [ -f src/main.tsx ]; then
            node - <<'NODE'
            const fs = require('fs');
            const p = 'src/main.tsx';
            let s = fs.readFileSync(p, 'utf8');
            if (!/normalizedPath\.endsWith\('\/visual-canvas'\)/.test(s)) {
              s = s.replace(
                /(const param = .*?;\s*)(?![^]*normalizedPath)/s,
                `$1
  const normalizedPath = url.pathname.replace(/\\/+$/, '');
  if (normalizedPath.endsWith('/visual-canvas')) {
    return 'canvas';
  }
`
              );
              fs.writeFileSync(p, s);
              console.log('Inserted route normalization in src/main.tsx');
            } else {
              console.log('Route normalization already present; skipping.');
            }
            NODE
          else
            echo "src/main.tsx not found; skipping."
          fi

      # Optional: use BASE_URL for canvas config wherever referenced
      - name: Rewrite visual-canvas config URL (optional)
        shell: bash
        run: |
          if [ -d src ]; then
            node - <<'NODE'
            const fs = require('fs');
            const path = require('path');
            const root = 'src';
            let changed = 0;
            function walk(dir) {
              for (const name of fs.readdirSync(dir)) {
                const full = path.join(dir, name);
                const st = fs.statSync(full);
                if (st.isDirectory()) walk(full);
                else if (/\.(t|j)sx?$/.test(name)) {
                  let s = fs.readFileSync(full, 'utf8');
                  const next = s.replace(
                    /(['"`])\/visual-canvas\/config\.json\1/g,
                    '`${import.meta.env.BASE_URL}visual-canvas/config.json`'
                  );
                  if (next !== s) {
                    fs.writeFileSync(full, next);
                    changed++;
                    console.log('Patched:', full);
                  }
                }
              }
            }
            walk(root);
            console.log(`Patched files: ${changed}`);
            NODE
          else
            echo "src/ not present; skipping."
          fi

      - name: Commit fixes (if any)
        run: |
          if git diff --quiet; then
            echo "No changes to commit."
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "fix(pages): relative Vite base; optional canvas route + BASE_URL config"
            git push
          fi

      - name: Install dependencies
        run: npm ci

      - name: Build Vite site
        env:
          VITE_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          VITE_SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: npm run build

      - name: Copy snapshot assets (optional)
        env:
          PUBLIC_BASE_PATH: /vibeflow
        run: |
          if npm run | grep -q "dashboard:publish"; then
            npm run dashboard:publish
          else
            echo "dashboard:publish not defined; skipping."
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
